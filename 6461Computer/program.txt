###### This program is designed to:
### 1. Print out and store six sentences.
### 2. Prompt the user to enter a word.
### 3. Return the value amongst the 20 values that is closest to the entered value.
###### Reserved values
# Trap table space
0000  0030
# MFR table space
0001  0030
# Trap store PC
0002  0000
# 0003 NOT USED
# MFR store PC
0004  0000
# 0005 NOT USED
0006  0000
0007  0000
###### Central program.
# 1) LDX 0100 for getting to First Read-in subroutine
0008  A44A
# 2) JMA to first message printer at EA IX plus addr
0009  3448
# Make some IXR shortcuts for faster reference later Reserved 0A-2F
000A  0100
000B  0200
000C  0300
000D  0400
000E  0500
0010  0600
0011  0000
0012  0000
0013  0123
0014  05D0
#EOW character is an @
0015  0040
#ASCII value of .
0016  002E
#ASCII value of ,
0017  002C
#ASCII value of spc
0018  0020
#Raw value 7
0019  0007
############### Prompts location Trap[0] and Trap[2]
001A  0040
001B  0059
############### More IXR shortcuts available to use
001C  0000
001D  0000
# Sentence Count
001E  0001
# Word Count
001F  0001
###############
###############
###############
############### trap table (0030~003F) & MFR table (0030~0033)
############### NOTE: trap[0~3] = MFR[0~3] (trap[4~15] unassigned yet)
############### 
############### : jumps to the corresponding trap subroutine
###############
###############
# 1) Jump to Trap Subroutine 0
0030  0400
# 2) Jump to Trap Subroutine 1
0031  0420
# 3) Jump to Trap Subroutine 2
0032  0440
# 4) Jump to Trap Subroutine 3
0033  0460
# 5) Jump to Trap Subroutine 4
0034  0480
# 6) Jump to Trap Subroutine 5
0035  04A0
# 7) Jump to Trap Subroutine 6
0036  04C0
# 8) Jump to Trap Subroutine 7
0037  04E0
# 9) Jump to Trap Subroutine 8
0038  04F0
# 10) Jump to Trap Subroutine 9
0039  04F1
# 11) Jump to Trap Subroutine 10
003A  04F2
# 12) Jump to Trap Subroutine 11
003B  04F3
# 13) Jump to Trap Subroutine 12
003C  04F4
# 14) Jump to Trap Subroutine 13
003D  04F5
# 15) Jump to Trap Subroutine 14
003E  04F6
# 16) Jump to Trap Subroutine 15
003F  04F7
###############
###############
############### Prompt for Machine Fault ID 0 = Trap[0] 
############### 
############### "ERR RESERVED"
###############
###############
#E
0040  0045
#R
0041  0052
#R
0042  0052
#
0043  0020
#R
0044  0052
#E 
0045  0045
#S
0046  0053
#E 
0047  0045
#R
0048  0052
#V
0049  0056
#E
004A  0045
#D
004B  0044
###############
###############
############### Prompt for Machine Fault ID 1 = Trap[1] 
############### 
############### "ERR TRAP CODE"
###############
###############
#E
004C  0045
#R
004D  0052
#R
004E  0052
#
004F  0020
#T
0050  0054
#R
0051  0052
#A
0052  0041
#P
0053  0050
#
0054  0020
#C
0055  0043
#O
0056  004F
#D
0057  0044
#E
0058  0045
###############
###############
############### Prompt for Machine Fault ID 2 = Trap[2] 
############### 
############### "ERR OPCODE"
###############
###############
#E
0059  0045
#R
005A  0052
#R
005B  0052
#
005C  0020
#O
005D  004F
#P
005E  0050
#C
005F  0043
#O
0060  004F
#D
0061  0044
#E
0062  0045
###############
###############
############### Prompt for Machine Fault ID 3 = Trap[3] 
############### 
############### "ERR MEM ADDR"
###############
###############
#E
0063  0045
#R
0064  0052
#R
0065  0052
#
0066  0020
#M
0067  004D
#E
0068  0045
#M
0069  004D
#
006A  0020
#A
006B  0041
#D
006C  0044
#D
006D  0044
#R
006E  0052
############################################
##### 100 Value storage loop - By Michael Ashery
#100-107 are reserved for storing variables.
#COUNTER - Counts number of periods until six sentences.
0100  0006
#ASCII value of .
0101  002E
#ASCII value of end 
# LDX IXR2 with paragraph location
0108  A490
# LDR reg 3 with variable at 100 (should be 6)
0109  0740
# LDR Reg 2 with period 0x2E
010A  0641
# IN char from buffer to reg 1
010B  F500
# OUT char in reg 1
010C  F901
# STR char in reg 1 to IXR 2
010D  0980
# AIX +1 to IXR2
010E  B881
# TRR reg1 & 2
010F  5980
# JCC to value counter (# 9)
0110  3052
# JMA to #4
0111  344B
###Value counter
# SOB reg 3 (jump back to #4 if >0, else proceed)
0112  434B
###Prompt user
# SCRL
0113  F000
# AIR Reg 2 amt dec23 (sets value to 0x45 - E)
0114  1A17
# Out Reg 2
0115  FA01
# AIR Reg 2 amt dec9 (sets value to 0x4E - N)
0116  1A09
# Out Reg 2
0117  FA01
# AIR Reg 2 amt dec6 (sets value to 0x54 - T)
0118  1A06
# Out Reg 2
0119  FA01
# SCRL
011A  F000
#####################
# Accepting a value from the user - by Michael Ashery
###The Check KB status loop. 
# Check Device status. If on, set gpr0 to 1 #w
011B  FC00
# If gpr0 is 0, jump back to 11B. Otherwise proceed. #
011C  285B
########## Input Loop.
###Setup
#LDX IXR 3 -> 5D0 (x14)
011D  A4D4
#LDR gpr0 addr 3
011E  0403
#LDR gpr1 addr 3
011F  0503
#LDR gpr2 the EOW character 
0120  0615
#LDR gpr3 addr 3
0121  0703
#LDX IXR 1 -> 123 (x13)
0122  A453
###Loop
#IN gpr1
0123  F500
#STR gpr1 at IXR 3
0124  09C0
#TRR reg 1 and reg 2
0125  5980
#JCC if true to 012A
0126  3047
#OUT Reg 1
0127  F901
#AIX IXR3 +1
0128  B8C1
#JMA to start of loop (123)
0129  3440
# LDX ixr1 for next part
012A  A44B
# LDX ixr 2 to start of paragraph
012B  A490
# Reset IXR 3 to start of word (x14)
012C  A4D4
# JMA to next part
012D  344A
############ The Comparison Loop - by Michael Ashery
############ Checks to see if the words match.
# Address for Word Scroller
0200  0240
# Address for Period incrementer 
0201  0260
# Address for End Printer
0202  02A0
# Address for Space Incrementer (space incrementer is period + x000D)
0203  0269
# AIX ixr2 +1
0208  B881
# AIX ixr3 +1
0209  B8C1
# START HERE LDR gpr 1 with pgh letter (ixr2)
020A  0580
# LDR gpr 2 with word letter (ixr3)
020B  06C0
# TRR r1,r2
020C  5980
# JCC back to top
020D  3050
# JZ gpr 3 to space check (#10)
020E  2B63
# JMA to word scroller
020F  3460
# LDR ascii space to gpr0
0210  0418
# TRR r0 r1
0211  5840
# JCC End Printer if true (put at start?)
0212  3062
# Otherwise LDR asci comma to gpr0
0213  0417
# TRR r0 r1
0214  5840
# JCC to End printer if true
0215  3040
# Otherwise LDR asci period to gpr0
0216  0416
# TRR r0 r1
0217  5840
# JCC to End printer if true
0218  3042
# JMA to word scroller
0219  3444
######### Word Scroller code by Michael Ashery
######### scrolls through characters that aren't space or period, and aren't part of the matched word.
# LDR gpr1 pgph letter (IXR2)
0240  0580
# LDR gpr0 space char
0241  0418
# TRR 0,1
0242  5840
# JCC to Space checker
0243  3051
# LDR gpr0 period char
0244  0416
# TRR 0,1
0245  5840
# JCC to Period checker
0246  3050
# AIX IXR 2 +1
0247  B881
# JMA to top
0248  3460
### Period Checker's address
0250  0260
### Space Checker's address
0251  0269
# Fail Printer address
0252  0280
########## Period and Space checker codes by Michael Ashery
# LDR gpr3 linecount. If it’s a period, start from here
0260  071E
# AIR gpr3 +1
0261  1B01
# LDR gpr0 raw value 7
0262  0419
# TRR 0,3
0263  58C0
# JCC to Failure End
0264  3052
# STR gpr3 at linecount
0265  0B1E
# AIX ixr2 +1
0266  B881
# LDR gpr3 wordcount reset value(0) addr3
0267  0703
# STR gpr3 wordcount location
0268  0B1F
# LDR gpr3 wordcount. If it’s just a space, start from here.
0269  071F
# AIR gpr3 +1
026A  1B01
# STR gpr3 wordcount location
026B  0B1F
# AIX IXR2 +1
026C  B881
# LDX ixr3 start of word (5D0 = x0014)
026D  A4D4
# LDX ixr1 compariosn loop
026E  A44B
# JMA to comparison loop
026F  3448
########## Failure Printout
0280
########## Success Printout
02A0
### The word is stored at 5E0 and down
#
#
#
###############
###############
###### 0400 Execute trap subroutines - By Jaeseok Choi
###############
###############
############### Machine Fault ID 0
############### Trap[0] 
############### Print "ERR RESERVED"
###############
###############
# Clear IXR1 
0400  A443
# Load IXR1 with contents of 001A 
0401  A45A
#LDR char to reg (1/12)
0402  0440
#OUT char
0403  F801
#LDR char to reg (2/12)
0404  0441
#OUT char
0405  F801
#LDR char to reg (3/12)
0406  0442
#OUT char
0407  F801
#LDR char to reg (4/12)
0408  0443
#OUT char
0409  F801
#LDR char to reg (5/12)
040A  0444
#OUT char
040B  F801
#LDR char to reg (6/12)
040C  0445
#OUT char
040D  F801
#LDR char to reg (7/12)
040E  0446
#OUT char
040F  F801
#LDR char to reg (8/12)
0410  0447
#OUT char
0411  F801
#LDR char to reg (9/12)
0412  0448
#OUT char
0413  F801
#LDR char to reg (10/12)
0414  0449
#OUT char
0415  F801
#LDR char to reg (11/12)
0416  044A
#OUT char
0417  F801
#LDR char to reg (12/12)
0418  044B
#OUT char
0419  F801
# SCRL
041A  F000
# After printing out the prompt, halts the program
041B  0000
############ Trap subroutines end
### The sentences are stored at 0600 and down.
#
##### 
##### 
##### END OF THE PROGRAM 2 #####
##### 
#####
